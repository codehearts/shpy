#!/bin/sh

testCalledWithNoArgs_ShouldReturnUsage() {
    # shellcheck disable=SC2039
    local output

    output=$(getSpyCallCount 2>&1 >/dev/null)

    assertFalse "\`getSpyCallCount\` returns false" $?
    printf '%s\n' "$output" | grep -q '^Usage:'
    assertTrue 'output begins with "Usage:"' $?
}

testSpyNotRun_ShouldReportZeroCalls() {
    createSpy dosomething || fail 'createSpy dosomething'

    assertEquals 0 "$(getSpyCallCount dosomething)"
}

testSpyRunOnce_ShouldReportOneCall() {
    createSpy dosomething || fail 'createSpy dosomething'

    dosomething

    assertEquals 1 "$(getSpyCallCount dosomething)"
}

testSpyRunOnceFromSubshell_ShouldReportOneCall() {
    createSpy dosomething || fail 'createSpy dosomething'

    (dosomething)

    assertEquals 1 "$(getSpyCallCount dosomething)"
}

testTwoSpies_ShouldHaveIndependentCallCounts() {
    createSpy dosomething || fail 'createSpy dosomething'
    createSpy dosomethingelse || fail 'createSpy dosomethingelse'

    dosomething

    assertEquals 1 "$(getSpyCallCount dosomething)"
    assertEquals 0 "$(getSpyCallCount dosomethingelse)"
}

testSpyRunTwice_ShouldReportTwoCalls() {
    createSpy dosomething || fail 'createSpy dosomething'

    dosomething
    dosomething

    assertEquals 2 "$(getSpyCallCount dosomething)"
}
