#!/usr/bin/env sh

itDisplaysUsageWhenGettingCallCountWithoutArgs() {
    assertEquals 'usage message was not displayed' \
      'Usage: getSpyCallCount name' \
      "$(getSpyCallCount 2>&1 | head -n1)"
}

itReturns1WhenGettingCallCountWithoutArgs() {
    getSpyCallCount >/dev/null
    assertEquals 1 $?
}

itOutputs0WhenGettingCallCountOfSpyNeverCalled() {
    doOrDie createSpy dosomething
    assertEquals '0' "$(getSpyCallCount dosomething 2>&1)"
}

itOutputs1WhenGettingCallCountOfSpyCalledOnce() {
    doOrDie createSpy dosomething

    dosomething

    assertEquals '1' "$(getSpyCallCount dosomething 2>&1)"
}

itOutputs1WhenGettingCallCountOfSpyCalledOnceInNewShell() {
    doOrDie createSpy dosomething

    runInNewShell dosomething

    assertEquals '1' "$(getSpyCallCount dosomething 2>&1)"
}

itOutputs2WhenGettingCallCountOfSpyCalledTwice() {
    doOrDie createSpy dosomething

    dosomething
    dosomething

    assertEquals '2' "$(getSpyCallCount dosomething 2>&1)"
}

itOutputs2WhenGettingCallCountOfSpyCalledTwiceInNewShell() {
    doOrDie createSpy dosomething

    runInNewShell dosomething
    runInNewShell dosomething

    assertEquals '2' "$(getSpyCallCount dosomething 2>&1)"
}

itOutputsCorrectCallCountsForMultipleSpies() {
    doOrDie createSpy dosomething
    doOrDie createSpy dosomethingelse

    dosomething

    assertEquals 'call count output for wrong spy' '1' "$(getSpyCallCount dosomething 2>&1)"
    assertEquals 'call count output for wrong spy' '0' "$(getSpyCallCount dosomethingelse 2>&1)"
}

itOutputsCorrectCallCountsForMultipleSpiesInNewShell() {
    doOrDie createSpy dosomething
    doOrDie createSpy dosomethingelse

    runInNewShell dosomething

    assertEquals 'call count output for wrong spy in new shell' '1' "$(getSpyCallCount dosomething 2>&1)"
    assertEquals 'call count output for wrong spy in new shell' '0' "$(getSpyCallCount dosomethingelse 2>&1)"
}
