#!/usr/bin/env sh

itCanStubSystemCommands() {
    doOrDie createSpy touch
    touch nonexistent_file

    assertCalledOnceWith_ 'failed to verify call count and args for system spy' touch nonexistent_file

    [ -f nonexistent_file ]
    assertFalse 'file was created; "touch" was not stubbed' $?
}

itCanStubSystemCommandsInNewShell() {
    doOrDie createSpy touch
    runInNewShell touch nonexistent_file

    assertCalledOnceWith_ 'failed to verify call count and args for system spy in new shell' touch nonexistent_file

    [ -f nonexistent_file ]
    assertFalse 'file was created; "touch" was not stubbed in new shell' $?
}

# mkdir is used internally by shpy, so the spy must not be used internally
itCanStubSystemCommandsUsedByShpy() {
    doOrDie createSpy -r 123 mkdir
    mkdir -p nonexistent_dir

    assertEquals 'return value was not stubbed' 123 $?

    assertCalledOnceWith_ 'failed to verify call count and args for system spy' mkdir -p nonexistent_dir

    [ -d nonexistent_dir ]
    assertFalse 'directory was created; "mkdir" was not stubbed' $?
}

# mkdir is used internally by shpy, so the spy must not be used internally
itCanStubSystemCommandsUsedByShpyInNewShell() {
    doOrDie createSpy -r 123 mkdir
    runInNewShell mkdir -p nonexistent_dir

    assertEquals 'return value was not stubbed in new shell' 123 $?

    assertCalledOnceWith_ 'failed to verify call count and args for system spy in new shell' mkdir -p nonexistent_dir

    [ -d nonexistent_dir ]
    assertFalse 'directory was created; "mkdir" was not stubbed in new shell' $?
}
